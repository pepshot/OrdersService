time="2025-06-30T16:37:02+04:00" level=info msg="create router" func="main.main()" file="app.go:16"
time="2025-06-30T16:37:02+04:00" level=info msg="register order handler" func="main.main()" file="app.go:19"
time="2025-06-30T16:39:17+04:00" level=info msg="create router" func="main.main()" file="app.go:16"
time="2025-06-30T16:39:17+04:00" level=info msg="register order handler" func="main.main()" file="app.go:19"
time="2025-06-30T16:39:17+04:00" level=info msg="start application" func="main.start()" file="app.go:35"
time="2025-06-30T16:39:17+04:00" level=info msg="start is listening port 0.0.0.0:1234" func="main.start()" file="app.go:48"
time="2025-06-30T16:44:30+04:00" level=info msg="create router" func="main.main()" file="app.go:16"
time="2025-06-30T16:44:30+04:00" level=info msg="register order handler" func="main.main()" file="app.go:19"
time="2025-06-30T16:44:30+04:00" level=info msg="start application" func="main.start()" file="app.go:35"
time="2025-06-30T16:44:30+04:00" level=info msg="start is listening port 0.0.0.0:1234" func="main.start()" file="app.go:48"
time="2025-06-30T16:53:05+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:53:05+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:53:05+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:53:05+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:53:05+04:00" level=info msg="listen tcp" func="main.start()" file="app.go:53"
time="2025-06-30T16:53:05+04:00" level=info msg="start is listening port 0.0.0.0:1234" func="main.start()" file="app.go:67"
time="2025-06-30T16:54:51+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:54:51+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:54:51+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:54:51+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:54:51+04:00" level=info msg="listen tcp" func="main.start()" file="app.go:53"
time="2025-06-30T16:54:51+04:00" level=info msg="start is listening port 127.0.0.1:10000" func="main.start()" file="app.go:67"
time="2025-06-30T16:55:24+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:55:24+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:55:24+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:55:24+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:55:24+04:00" level=info msg="create socket" func="main.start()" file="app.go:45"
time="2025-06-30T16:55:24+04:00" level=debug msg="socket path: /home/alexander/.cache/go-build/7b/7b8518767f332d4d24b26fdd9e2cfa39b10fee87ad8955bbb8930cf7af15c629-d/app.sock" func="main.start()" file="app.go:47"
time="2025-06-30T16:55:24+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:55:24+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/7b/7b8518767f332d4d24b26fdd9e2cfa39b10fee87ad8955bbb8930cf7af15c629-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:58"
time="2025-06-30T16:56:30+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:56:30+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:56:30+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:56:30+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:56:30+04:00" level=info msg="create socket" func="main.start()" file="app.go:45"
time="2025-06-30T16:56:30+04:00" level=debug msg="socket path: /tmp/go-build3097579212/b001/exe/app.sock" func="main.start()" file="app.go:47"
time="2025-06-30T16:56:30+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:57:37+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:57:37+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:57:37+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:57:37+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:57:37+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T16:57:37+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T16:57:37+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:57:37+04:00" level=info msg="server is listening unix socket: /tmp/go-build2763531260/b001/exe/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T16:58:09+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:58:09+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:58:09+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:58:09+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:58:09+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T16:58:09+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T16:58:09+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:58:09+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T16:58:09+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T16:58:27+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:58:27+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:58:27+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:58:27+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:58:27+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T16:58:27+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T16:58:27+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:58:27+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T16:58:27+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T16:58:37+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:58:37+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:58:37+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:58:37+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:58:37+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T16:58:37+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T16:58:37+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:58:37+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T16:58:37+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T16:59:10+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:59:10+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:59:10+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:59:10+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:59:10+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T16:59:10+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T16:59:10+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:59:10+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T16:59:10+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T16:59:20+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:59:20+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:59:20+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:59:20+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:59:20+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T16:59:20+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T16:59:20+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:59:20+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T16:59:20+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T16:59:56+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T16:59:56+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T16:59:56+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T16:59:56+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T16:59:56+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T16:59:56+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T16:59:56+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T16:59:56+04:00" level=info msg="server is listening unix socket: /home/alexander/GolandProjects/OrdersService/build/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:00:06+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:00:06+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:00:06+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:00:06+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:00:06+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:00:06+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:00:06+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:00:06+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:00:06+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T17:00:17+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:00:17+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:00:17+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:00:17+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:00:17+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:00:17+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:00:17+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:00:17+04:00" level=info msg="server is listening unix socket: /home/alexander/GolandProjects/OrdersService/build/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:00:17+04:00" level=fatal msg="listen unix /home/alexander/GolandProjects/OrdersService/build/app.sock: bind: address already in use" func="main.start()" file="app.go:60"
time="2025-06-30T17:00:47+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:00:47+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:00:47+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:00:47+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:00:47+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:00:47+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:00:47+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:00:47+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:00:47+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T17:02:14+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:02:14+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:02:14+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:02:14+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:02:14+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:02:14+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:02:14+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:02:14+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:02:14+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T17:02:16+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:02:16+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:02:16+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:02:16+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:02:16+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:02:16+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:02:16+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:02:16+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:02:16+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T17:02:21+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:02:21+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:02:21+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:02:21+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:02:21+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:02:21+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:02:21+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:02:21+04:00" level=info msg="server is listening unix socket: /home/alexander/GolandProjects/OrdersService/build/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:02:21+04:00" level=fatal msg="listen unix /home/alexander/GolandProjects/OrdersService/build/app.sock: bind: address already in use" func="main.start()" file="app.go:60"
time="2025-06-30T17:03:03+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:03:03+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:03:03+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:03:03+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:03:03+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:03:03+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:03:03+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:03:03+04:00" level=info msg="server is listening unix socket: /home/alexander/GolandProjects/OrdersService/build/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:03:03+04:00" level=fatal msg="listen unix /home/alexander/GolandProjects/OrdersService/build/app.sock: bind: address already in use" func="main.start()" file="app.go:60"
time="2025-06-30T17:03:18+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:03:18+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:03:18+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:03:18+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:03:18+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:03:18+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:03:18+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:03:18+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:03:18+04:00" level=fatal msg="listen unix /home/alexander/.cache/go-build/89/89263dd3c13bd0430a46454614994c5da627057c240846145b1b08c8780bb8ff-d/app.sock: bind: invalid argument" func="main.start()" file="app.go:60"
time="2025-06-30T17:03:32+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:03:32+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:03:32+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:03:32+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:03:32+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:03:32+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:03:32+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:03:32+04:00" level=info msg="server is listening unix socket: /home/alexander/GolandProjects/OrdersService/build/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:03:43+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:03:43+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:03:43+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:03:43+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:03:43+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:03:43+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:03:43+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:03:43+04:00" level=info msg="server is listening unix socket: /home/alexander/GolandProjects/OrdersService/build/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:03:43+04:00" level=fatal msg="listen unix /home/alexander/GolandProjects/OrdersService/build/app.sock: bind: address already in use" func="main.start()" file="app.go:60"
time="2025-06-30T17:16:27+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:16:27+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:16:27+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:16:27+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:16:27+04:00" level=info msg="detect app path" func="main.start()" file="app.go:40"
time="2025-06-30T17:16:27+04:00" level=info msg="create socket" func="main.start()" file="app.go:46"
time="2025-06-30T17:16:27+04:00" level=info msg="create unix socket" func="main.start()" file="app.go:49"
time="2025-06-30T17:16:27+04:00" level=info msg="server is listening unix socket: /home/alexander/.cache/JetBrains/GoLand2024.3/tmp/GoLand/app.sock" func="main.start()" file="app.go:51"
time="2025-06-30T17:16:27+04:00" level=fatal msg="listen unix /home/alexander/.cache/JetBrains/GoLand2024.3/tmp/GoLand/app.sock: bind: address already in use" func="main.start()" file="app.go:60"
time="2025-06-30T17:16:40+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:16:40+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:16:40+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:16:40+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:16:40+04:00" level=info msg="listen tcp" func="main.start()" file="app.go:54"
time="2025-06-30T17:16:40+04:00" level=info msg="start is listening port 127.0.0.1:10000" func="main.start()" file="app.go:56"
time="2025-06-30T17:16:51+04:00" level=info msg="create router" func="main.main()" file="app.go:20"
time="2025-06-30T17:16:51+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:24"
time="2025-06-30T17:16:51+04:00" level=info msg="register order handler" func="main.main()" file="app.go:25"
time="2025-06-30T17:16:51+04:00" level=info msg="start application" func="main.start()" file="app.go:34"
time="2025-06-30T17:16:51+04:00" level=info msg="listen tcp" func="main.start()" file="app.go:54"
time="2025-06-30T17:16:51+04:00" level=info msg="start is listening port 127.0.0.1:8081" func="main.start()" file="app.go:56"
time="2025-07-07T21:23:44+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:23:44+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:23:44+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:23:44+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:23:44+04:00" level=trace msg="SQL Query: SELECT order_uid FROM orders" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:23:44+04:00" level=fatal msg="Failed to restore cache from database: ERROR: relation \"orders\" does not exist (SQLSTATE 42P01)" func="main.main()" file="app.go:42"
time="2025-07-07T21:28:10+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:28:10+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:28:10+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:28:10+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:28:10+04:00" level=trace msg="SQL Query: SELECT order_uid FROM orders" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:28:10+04:00" level=fatal msg="Failed to restore cache from database: ERROR: relation \"orders\" does not exist (SQLSTATE 42P01)" func="main.main()" file="app.go:42"
time="2025-07-07T21:44:50+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:44:50+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:44:50+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:44:50+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:44:50+04:00" level=trace msg="SQL Query: SELECT order_uid FROM orders" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:44:50+04:00" level=fatal msg="Failed to restore cache from database: ERROR: relation \"orders\" does not exist (SQLSTATE 42P01)" func="main.main()" file="app.go:42"
time="2025-07-07T21:44:51+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:44:51+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:44:51+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:44:51+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:44:51+04:00" level=trace msg="SQL Query: SELECT order_uid FROM orders" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:44:51+04:00" level=fatal msg="Failed to restore cache from database: ERROR: relation \"orders\" does not exist (SQLSTATE 42P01)" func="main.main()" file="app.go:42"
time="2025-07-07T21:47:52+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:47:52+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:47:52+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:47:52+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:47:52+04:00" level=trace msg="SQL Query: SELECT order_uid FROM orders" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:47:52+04:00" level=fatal msg="Failed to restore cache from database: ERROR: relation \"orders\" does not exist (SQLSTATE 42P01)" func="main.main()" file="app.go:42"
time="2025-07-07T21:54:53+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:54:53+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:54:53+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:54:53+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:54:53+04:00" level=trace msg="SQL Query: SELECT order_uid FROM public.order" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:54:53+04:00" level=trace msg="Starting Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Start()" file="consumer.go:44"
time="2025-07-07T21:54:53+04:00" level=info msg="Starting HTTP server on port 8080" func="main.startHTTPServer.func1()" file="app.go:74"
time="2025-07-07T21:56:23+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, locale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T21:56:23+04:00" level=error msg="Failed to get order b563feb7b2b84b6test1 from DB: ERROR: column \"locale\" does not exist (SQLSTATE 42703)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T21:56:24+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, locale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T21:56:24+04:00" level=error msg="Failed to get order b563feb7b2b84b6test1 from DB: ERROR: column \"locale\" does not exist (SQLSTATE 42703)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T21:56:28+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, locale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T21:56:28+04:00" level=error msg="Failed to get order b563feb7b2b84b6test1 from DB: ERROR: column \"locale\" does not exist (SQLSTATE 42703)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T21:56:50+04:00" level=info msg="Shutting down server..." func="main.waitForShutdown()" file="app.go:88"
time="2025-07-07T21:56:50+04:00" level=info msg="Server exited properly" func="main.waitForShutdown()" file="app.go:97"
time="2025-07-07T21:56:50+04:00" level=trace msg="Stopping Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Stop()" file="consumer.go:52"
time="2025-07-07T21:56:56+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:56:56+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:56:56+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:56:56+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:56:56+04:00" level=trace msg="SQL Query: SELECT order_uid FROM public.order" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:56:56+04:00" level=trace msg="Starting Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Start()" file="consumer.go:44"
time="2025-07-07T21:56:56+04:00" level=info msg="Starting HTTP server on port 8080" func="main.startHTTPServer.func1()" file="app.go:74"
time="2025-07-07T21:57:05+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, locale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T21:57:05+04:00" level=error msg="Failed to get order b563feb7b2b84b6test1 from DB: ERROR: column \"locale\" does not exist (SQLSTATE 42703)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T21:58:10+04:00" level=info msg="Shutting down server..." func="main.waitForShutdown()" file="app.go:88"
time="2025-07-07T21:58:10+04:00" level=info msg="Server exited properly" func="main.waitForShutdown()" file="app.go:97"
time="2025-07-07T21:58:10+04:00" level=trace msg="Stopping Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Stop()" file="consumer.go:52"
time="2025-07-07T21:58:13+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:58:13+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:58:13+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:58:13+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:58:13+04:00" level=trace msg="SQL Query: SELECT order_uid FROM public.order" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:58:13+04:00" level=trace msg="Starting Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Start()" file="consumer.go:44"
time="2025-07-07T21:58:13+04:00" level=info msg="Starting HTTP server on port 8080" func="main.startHTTPServer.func1()" file="app.go:74"
time="2025-07-07T21:58:20+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T21:58:20+04:00" level=error msg="Failed to get order b563feb7b2b84b6test1 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T21:58:47+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T21:58:47+04:00" level=error msg="Failed to get order b563feb7b2b84b6test2 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T21:58:48+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T21:58:48+04:00" level=error msg="Failed to get order b563feb7b2b84b6test2 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T21:59:50+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T21:59:50+04:00" level=error msg="Failed to get order b563feb7b2b84b6test2 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T21:59:54+04:00" level=info msg="Shutting down server..." func="main.waitForShutdown()" file="app.go:88"
time="2025-07-07T21:59:54+04:00" level=info msg="Server exited properly" func="main.waitForShutdown()" file="app.go:97"
time="2025-07-07T21:59:54+04:00" level=trace msg="Stopping Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Stop()" file="consumer.go:52"
time="2025-07-07T21:59:56+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T21:59:56+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T21:59:56+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T21:59:56+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T21:59:56+04:00" level=trace msg="SQL Query: SELECT order_uid FROM public.order" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T21:59:56+04:00" level=trace msg="Starting Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Start()" file="consumer.go:44"
time="2025-07-07T21:59:56+04:00" level=info msg="Starting HTTP server on port 8080" func="main.startHTTPServer.func1()" file="app.go:74"
time="2025-07-07T22:00:12+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T22:00:12+04:00" level=error msg="Failed to get order b563feb7b2b84b6test2 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T22:00:15+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T22:00:15+04:00" level=error msg="Failed to get order b563feb7b2b84b6test2 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T22:01:19+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T22:01:19+04:00" level=error msg="Failed to get order b563feb7b2b84b6test2 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T22:05:09+04:00" level=info msg="Shutting down server..." func="main.waitForShutdown()" file="app.go:88"
time="2025-07-07T22:05:09+04:00" level=info msg="Server exited properly" func="main.waitForShutdown()" file="app.go:97"
time="2025-07-07T22:05:09+04:00" level=trace msg="Stopping Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Stop()" file="consumer.go:52"
time="2025-07-07T22:05:10+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T22:05:10+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T22:05:36+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T22:05:36+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T22:05:36+04:00" level=trace msg="SQL Query: SELECT order_uid FROM public.order" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T22:06:05+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T22:06:05+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T22:06:05+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T22:06:05+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T22:06:05+04:00" level=trace msg="SQL Query: SELECT order_uid FROM public.order" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T22:06:05+04:00" level=trace msg="Starting Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Start()" file="consumer.go:44"
time="2025-07-07T22:06:05+04:00" level=info msg="Starting HTTP server on port 8080" func="main.startHTTPServer.func1()" file="app.go:74"
time="2025-07-07T22:07:09+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T22:07:09+04:00" level=error msg="Failed to get order b563feb7b2b84b6test1 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T22:08:39+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T22:08:39+04:00" level=error msg="Failed to get order b563feb7b2b84b6test3 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T22:10:33+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T22:10:33+04:00" level=error msg="Failed to get order b563feb7b2b84b6test3 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T22:10:51+04:00" level=info msg="Shutting down server..." func="main.waitForShutdown()" file="app.go:88"
time="2025-07-07T22:10:51+04:00" level=info msg="Server exited properly" func="main.waitForShutdown()" file="app.go:97"
time="2025-07-07T22:10:51+04:00" level=trace msg="Stopping Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Stop()" file="consumer.go:52"
time="2025-07-07T22:11:00+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T22:11:00+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T22:11:00+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T22:11:00+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T22:11:00+04:00" level=trace msg="SQL Query: SELECT order_uid FROM public.order" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T22:11:00+04:00" level=trace msg="Starting Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Start()" file="consumer.go:44"
time="2025-07-07T22:11:00+04:00" level=info msg="Starting HTTP server on port 8080" func="main.startHTTPServer.func1()" file="app.go:74"
time="2025-07-07T22:11:39+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T22:11:39+04:00" level=error msg="Failed to get order b563feb7b2b84b6test3 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T22:12:34+04:00" level=info msg="Shutting down server..." func="main.waitForShutdown()" file="app.go:88"
time="2025-07-07T22:12:34+04:00" level=info msg="Server exited properly" func="main.waitForShutdown()" file="app.go:97"
time="2025-07-07T22:12:34+04:00" level=trace msg="Stopping Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Stop()" file="consumer.go:52"
time="2025-07-07T22:12:35+04:00" level=info msg="Read configuration" func="main.main()" file="app.go:23"
time="2025-07-07T22:12:35+04:00" level=info msg="read application configuration" func="OrdersService/internal/config.GetConfig.func1()" file="config.go:42"
time="2025-07-07T22:12:35+04:00" level=info msg="Initialize repository" func="main.main()" file="app.go:32"
time="2025-07-07T22:12:35+04:00" level=info msg="Initialize cache" func="main.main()" file="app.go:35"
time="2025-07-07T22:12:35+04:00" level=trace msg="SQL Query: SELECT order_uid FROM public.order" func="OrdersService/internal/repository.OrderRepository.FindAll()" file="repository.go:40"
time="2025-07-07T22:12:35+04:00" level=trace msg="Starting Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Start()" file="consumer.go:44"
time="2025-07-07T22:12:35+04:00" level=info msg="Starting HTTP server on port 8080" func="main.startHTTPServer.func1()" file="app.go:74"
time="2025-07-07T22:12:42+04:00" level=trace msg="SQL Query: SELECT order_uid, track_number, entry, ocale, internal_signature, customer_id, delivery_service, shardkey, sm_id, date_created, oof_shardFROM public.order WHERE order_uid = $1" func="OrdersService/internal/repository.OrderRepository.FindOne()" file="repository.go:81"
time="2025-07-07T22:12:42+04:00" level=error msg="Failed to get order b563feb7b2b84b6test3 from DB: ERROR: permission denied for table order (SQLSTATE 42501)" func="OrdersService/internal/handlers.(*Handler).GetOrderByUID()" file="handler.go:45"
time="2025-07-07T22:16:45+04:00" level=info msg="Shutting down server..." func="main.waitForShutdown()" file="app.go:88"
time="2025-07-07T22:16:45+04:00" level=info msg="Server exited properly" func="main.waitForShutdown()" file="app.go:97"
time="2025-07-07T22:16:45+04:00" level=trace msg="Stopping Kafka consumer" func="OrdersService/internal/kafka.(*Consumer).Stop()" file="consumer.go:52"
